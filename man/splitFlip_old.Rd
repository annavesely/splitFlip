% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitFlip_old.R
\name{splitFlip_old}
\alias{splitFlip_old}
\title{Permutation-Based Multisplit (old)}
\usage{
splitFlip_old(X, Y, Q = 50, B = 200, target = NULL, exact = FALSE, varSel = targetLasso, varSelArgs = NULL, seed = NULL)
}
\arguments{
\item{X}{numeric design matrix (including the intercept), where columns correspond to variables, and rows to observations.}

\item{Y}{numeric response vector.}

\item{Q}{numer of data splits.}

\item{B}{number of sign flips.}

\item{target}{maximum number of variables to be selected.}

\item{exact}{logical, \code{TRUE} for the exact method, \code{FALSE} for the approximate method.}

\item{varSel}{a function to perform variable selection. It must have at least three arguments:
\code{X} (design matrix), \code{Y} (response vector) and \code{target} (maximum number of selected variables).
Additional arguments are passed through \code{varSelArgs}.
Return value is a numeric vector containing the indices of the selected variables.}

\item{varSelArgs}{named list of further arguments for \code{varSel}.}

\item{seed}{seed.}
}
\value{
\code{splitFlip} returns a numeric matrix of standardized scores, where columns correspond to variables,
and rows to \code{B} random sign flips. The first flip is the identity.
}
\description{
This function computes permutation standardized scores for high-dimensional linear regression.
}
\details{
The data are iteratively split into two subsets of equal size for \code{Q} times.
For each split, the first subset is used to perform variable selection,
while the second is used to compute the effective scores for
each variable and \code{B} random sign flips (including the identity).
If a variable is not selected, its score is set to zero.

For each variable and each sign flip, the standardized score is defined as (an approximation of)
the sum of the effective scores over the \code{Q} splits, divided by its variance.
}
\examples{
# generate linear regression data with 20 variables and 10 observations
res <- simData(prop=0.1, m=20, n=10, rho=0.5, type="toeplitz", SNR=5, seed=42)
X <- res$X # design matrix
Y <- res$Y # response vector
active <- res$active # indices of active variables

# choose target as twice the number of active variables
target <- 2*length(active)

# matrix of standardized scores for all variables (columns) and random sign flips (rows)
# using the approximate method with Lasso selection
G1 <- splitFlip_old(X, Y, target=target, seed=42)

# maxT algorithm
maxT(G1, alpha=0.1)

# matrix of standardized scores for all variables (columns) and random sign flips (rows)
# using the exact method with oracle selection
G2 <- splitFlip_old(X, Y, target=target, varSel=targetOracle, varSelArgs=list(toSel=active), seed=42)

# maxT algorithm
maxT(G2, alpha=0.1)
}
\author{
Anna Vesely.
}
